{"version":3,"sources":["components/Key.jsx","components/Display.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Key","alias","val","handleClick","style","className","onClick","Display","props","App","useState","total","setTotal","error","setError","undefined","Error","currentStr","join","newTotal","evaluate","shift","console","log","keys","map","item","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8yBAAaA,EAAM,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAC7C,OACE,wBAAQC,UAAS,cAASD,GAASE,QAAS,kBAAMH,EAAYD,IAA9D,SACGD,GAAgBC,KCHVK,EAAU,SAACC,GACtB,OAAO,oBAAIH,UAAU,UAAd,SAAyBG,EAAMN,OCmEzBO,EA1DH,WACV,MAA0BC,mBAAS,CAAC,IAApC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEMX,EAAc,SAACD,GACnB,IACE,QAAYa,IAARb,EACF,MAAM,IAAIc,MAAM,qBACX,GAAY,UAARd,EACTU,EAAS,CAAC,SACL,GAAY,MAARV,EAAa,CACtB,IAAIe,EAAaN,EAAMO,KAAK,IACxBC,EAAWC,YAASH,GAExBL,EAAS,CAACO,QACL,CACL,IAAIA,EAAQ,sBAAOR,GAAP,CAAcT,IACT,IAAbS,EAAM,IACRQ,EAASE,QAEXT,EAASO,IAEX,MAAON,GACPS,QAAQC,IAAIV,GACZC,GAAS,KAIb,OAAID,EAEA,qBAAKR,UAAU,UAAf,SACE,2DAKJ,sBAAKA,UAAU,UAAf,UACE,kDACA,sBAAKA,UAAU,gBAAf,UACE,cAAC,EAAD,CAASH,IAAKS,IACd,qBAAKN,UAAU,eAAf,SACGmB,EAAKC,KAAI,SAACC,EAAMC,GACf,OACE,cAAC,EAAD,CAEEzB,IAAKwB,EAAKxB,IACVD,MAAOyB,EAAKzB,MACZG,MAAOsB,EAAKtB,MACZD,YAAaA,GAJRwB,eC1CNC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f783cf78.chunk.js","sourcesContent":["export const Key = ({ alias, val, handleClick, style }) => {\n  return (\n    <button className={`btn ${style}`} onClick={() => handleClick(val)}>\n      {alias ? alias : val}\n    </button>\n  );\n};","export const Display = (props) => {\n  return <h3 className=\"display\">{props.val}</h3>;\n};\n","// Calculator \n\nimport { useState } from \"react\";\nimport { evaluate } from \"mathjs\";\n\nimport \"./App.css\";\nimport keys from \"./keys.json\";\nimport { Key } from \"./components/Key\";\nimport { Display } from \"./components/Display\";\n\nconst App = () => {\n  const [total, setTotal] = useState([0]);\n  const [error, setError] = useState(false);\n\n  const handleClick = (val) => {\n    try {\n      if (val === undefined) {\n        throw new Error(\"Value not defined\")\n      } else if (val === \"clear\") {\n        setTotal([0]);\n      } else if (val === \"=\") {\n        let currentStr = total.join(\"\");\n        let newTotal = evaluate(currentStr);\n        // limit number of chars for new total\n        setTotal([newTotal]);\n      } else {\n        let newTotal = [...total, val];\n        if (total[0] === 0) {\n          newTotal.shift();\n        }\n        setTotal(newTotal);\n      }\n    } catch (error) {\n      console.log(error);\n      setError(true)\n    }\n  };\n\n  if (error) {\n    return (\n      <div className=\"Wrapper\">\n        <h1>We encountered an error</h1>\n      </div>\n    );\n  }\n  return (\n    <div className=\"wrapper\">\n      <h1>React Calculator</h1>\n      <div className=\"calcContainer\">\n        <Display val={total} />\n        <div className=\"keyContainer\">\n          {keys.map((item, index) => {\n            return (\n              <Key\n                key={index}\n                val={item.val}\n                alias={item.alias}\n                style={item.style}\n                handleClick={handleClick}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}